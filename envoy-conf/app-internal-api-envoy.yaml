static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 9443
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      log_format:
                        json_format:
                          authority: "%REQ(:AUTHORITY)%"
                          bytes_received: "%BYTES_RECEIVED%"
                          bytes_sent: "%BYTES_SENT%"
                          duration: "%DURATION%"
                          method: "%REQ(:METHOD)%"
                          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          protocol: "%PROTOCOL%"
                          request_id: "%REQ(X-REQUEST-ID)%"
                          requested_server_name: "%REQUESTED_SERVER_NAME%"
                          response_code: "%RESPONSE_CODE%"
                          response_code_details: "%RESPONSE_CODE_DETAILS%"
                          response_flags: "%RESPONSE_FLAGS%"
                          start_time: "%START_TIME%"
                          time_to_first_byte: "%RESPONSE_DURATION%"
                          upstream_cluster: "%UPSTREAM_CLUSTER%"
                          upstream_host: "%UPSTREAM_HOST%"
                          upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                          user_agent: "%REQ(USER-AGENT)%"
                          x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: app-internal-api
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              require_client_certificate: true
              common_tls_context:
                validation_context:
                  match_subject_alt_names: # Only accept client certificates with this hostname in the SAN
                    - exact: "app-internal-api"
                  trusted_ca:
                    filename: /etc/ssl/envoy/ca/ca.pem
                tls_certificates:
                  - certificate_chain:
                      filename: /etc/ssl/envoy/server/server.pem
                    private_key:
                      filename: /etc/ssl/envoy/server/server-key.pem
  clusters:
    - name: app-internal-api
      connect_timeout: 0.5s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      load_assignment:
        cluster_name: app-internal-api
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: app
                      port_value: 50051
      health_checks:
        timeout: 1s
        interval: 10s
        unhealthy_threshold: 2
        healthy_threshold: 2
        grpc_health_check: { }
